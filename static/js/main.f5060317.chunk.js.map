{"version":3,"sources":["Tabular/TabularHeader.js","Tabular/index.js","Tabular/utils.js","App.js","index.js"],"names":["fontawesome","library","add","faCheckSquare","faCoffee","faArrowUp","faArrowDown","faWindowClose","TabularHeader","props","dropdownOpen","setDropdownOpen","useState","console","log","columns","_jsxs","className","children","_jsx","headerTitle","length","onClick","handleSetDropdownOpen","style","display","flexDirection","margin","alignItems","width","whiteSpace","FontAwesomeIcon","fontSize","icon","map","col","handleSetHiddenCols","Math","random","Tabular","activeSort","setActiveSort","colWidths","setColWidths","tableData","setTableData","data","draggedElement","setDraggedElement","hiddenCols","setHiddenCols","headers","setHeaders","tableHeight","setTableHeight","tableElement","useRef","activeIndex","setActiveIndex","useEffect","current","offsetHeight","mouseMove","useCallback","e","gridColumns","i","clientX","ref","offsetLeft","minCellWidth","concat","offsetWidth","gridTemplateColumns","join","removeListeners","window","removeEventListener","mouseUp","addEventListener","colsRef","handleSetHeaders","cols","Set","Object","keys","flat","filter","el","includes","j","val","newD","sort","a","b","_a$activeSort$","toString","localeCompare","_b$activeSort$","handleOnDrop","draggedEl","findIndex","element","_id","droppedLoc","updatedAfterDrop","arr","old_index","new_index","k","push","undefined","splice","arrayMove","handleSetActiveSort","direction","currentlyHidden","find","item","_ref","height","onMouseDown","row","draggable","onDragStart","handleOnDrag","persist","onDragOver","handleOnDragOver","stopPropagation","preventDefault","onDrop","d","p","name","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5060317.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './tabular.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport fontawesome from '@fortawesome/fontawesome'\nimport { faCheckSquare, faCoffee, faArrowUp, faArrowDown, faWindowClose } from '@fortawesome/fontawesome-free-solid'\n\nfontawesome.library.add(faCheckSquare, faCoffee, faArrowUp, faArrowDown, faWindowClose);\n\n\nfunction TabularHeader(props) {\n    const [dropdownOpen, setDropdownOpen] = useState(false)\n    const handleSetDropdownOpen = () => dropdownOpen ? setDropdownOpen(false) : setDropdownOpen(true)\n    console.log('cols in props', props.columns)\n    return (\n        <div className=\"tab-header-container\">\n            <h1 className='header-title'>{props.headerTitle || 'Tabular List'}</h1>\n            {/* {props.columns} */}\n            {props.columns && props.columns.length ? (<div className='hidden-cols' onClick={handleSetDropdownOpen}>\n                <div style={{ display: 'flex', flexDirection: 'row', margin: 'auto', alignItems: 'center', width: '5em',whiteSpace: 'nowrap' }}>\n                    Hidden Columns\n                    {dropdownOpen ? <FontAwesomeIcon style={{ fontSize: '10px' }} icon=\"fa-solid fa-arrow-up\" /> :\n                        <FontAwesomeIcon style={{ fontSize: '10px' }} icon=\"fa-solid fa-arrow-down\" />}\n                </div>\n                {dropdownOpen ?\n                    (<ul>\n                        {props.columns.map(col => <li key={Math.random()} onClick={() => props.handleSetHiddenCols(col)}>{col}</li>)}\n                    </ul>) : null}\n            </div>) : null}\n        </div>\n    );\n}\n\nexport default TabularHeader;\n","import './tabular.css';\nimport data from './fake-data.json'\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport fontawesome from '@fortawesome/fontawesome'\nimport { faCheckSquare, faCoffee, faArrowUp, faArrowDown, faWindowClose } from '@fortawesome/fontawesome-free-solid'\nimport TabularHeader from './TabularHeader';\nimport {\n    // alphaSort, numSort, onDragStart, onDragOver, onDrop,\n    arrayMove,\n    createHeaders\n} from './utils';\n\nfontawesome.library.add(faCheckSquare, faCoffee, faArrowUp, faArrowDown, faWindowClose);\n\n\nfunction Tabular(props) {\n    const [activeSort, setActiveSort] = useState(null)\n    const [colWidths, setColWidths] = useState({})\n    const [tableData, setTableData] = useState(data)\n    const [draggedElement, setDraggedElement] = useState(null)\n    const [hiddenCols, setHiddenCols] = useState([])\n    const [headers, setHeaders] = useState([])\n    const [tableHeight, setTableHeight] = useState(\"auto\");\n    const tableElement = useRef(null);\n    const [activeIndex, setActiveIndex] = useState(null);\n\n    console.log('data...', data)\n    // console.log('headers', headers)\n    // const columns = createHeaders(headers);\n    useEffect(() => {\n        setTableHeight(tableElement.current.offsetHeight);\n    }, []);\n\n    const mouseDown = (index) => {\n        setActiveIndex(index);\n    };\n\n    const mouseMove = useCallback(\n        (e) => {\n            const gridColumns = headers.map((col, i) => {\n                if (i === activeIndex) {\n                    const width = e.clientX - col.ref.current.offsetLeft;\n\n                    if (width >= props.minCellWidth || 200) {\n                        return `${width}px`;\n                    }\n                }\n                return `${col.ref.current.offsetWidth}px`;\n            });\n\n            tableElement.current.style.gridTemplateColumns = `${gridColumns.join(\n                \" \"\n            )}`;\n        },\n        [activeIndex, headers, props.minCellWidth]\n    );\n\n    const removeListeners = useCallback(() => {\n        window.removeEventListener(\"mousemove\", mouseMove);\n        window.removeEventListener(\"mouseup\", removeListeners);\n    }, [mouseMove]);\n\n    const mouseUp = useCallback(() => {\n        setActiveIndex(null);\n        removeListeners();\n    }, [setActiveIndex, removeListeners]);\n\n    useEffect(() => {\n        if (activeIndex !== null) {\n            window.addEventListener(\"mousemove\", mouseMove);\n            window.addEventListener(\"mouseup\", mouseUp);\n        }\n\n        return () => {\n            removeListeners();\n        };\n    }, [activeIndex, mouseMove, mouseUp, removeListeners]);\n    const colsRef = useRef({});\n    const handleSetHeaders = useCallback(() => {\n        // const columns = createHeaders(headers);\n\n        const headersForTable = [...new Set(data.map(i => Object.keys(i)).flat())]\n        const headersForTableWithoutHidden = headersForTable.filter((el) => !hiddenCols.includes(el));\n        const cols = headersForTableWithoutHidden.map(j => ({val: j, ref: el => colsRef.current[j] = el}))\n        setHeaders(e => cols)\n    }, [hiddenCols])\n\n    useEffect(() => {\n        if (activeSort && activeSort.length) {\n            let newD = []\n            if (activeSort[1] === 'down') {\n                newD = data.sort((a, b) => {\n                    return a[activeSort[0]] - b[activeSort[0]] || a[activeSort[0]]?.toString().localeCompare(b[activeSort[0]].toString())\n                });\n            } else {\n                newD = data.sort((a, b) => {\n                    console.log(a, activeSort[0], b[activeSort[0]])\n                    return b[activeSort[0]] - a[activeSort[0]] || b[activeSort[0]]?.toString().localeCompare(a[activeSort[0]].toString())\n                });\n            }\n            console.log(newD)\n            setTableData(newD)\n        }\n        console.log('ughhhhhh')\n        handleSetHeaders()\n        // setTableData(data)\n    }, [activeSort, tableData, draggedElement, handleSetHeaders]);\n\n    // const handleResize = (e, val) => {\n    //     e.persist();\n    //     console.log('resizing', e, val)\n    // }\n    // const handleResizeDrop = (e, val) => {\n    //     e.stopPropagation();\n    //     e.preventDefault();\n    //     console.log('resizing', e, val)\n    // }\n\n    const handleOnDrag = (e, val) => {\n        e.persist();\n        setDraggedElement(val._id)\n    }\n    const handleOnDragOver = (e, val) => {\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    const handleOnDrop = (e, val) => {\n        const dragged = (element) => element._id === draggedElement;\n        const dropped = (element) => element._id === val._id;\n        const draggedEl = tableData.findIndex(dragged)\n        const droppedLoc = tableData.findIndex(dropped)\n        const updatedAfterDrop = arrayMove(tableData, draggedEl, droppedLoc)\n        setTableData(updatedAfterDrop)\n        setDraggedElement(null)\n    }\n    const handleSetActiveSort = (val, direction) => setActiveSort([val, direction])\n    console.log('tableData', tableData, headers)\n\n    const handleSetHiddenCols = (col) => {\n        console.log('col is', col)  \n        const currentlyHidden = [...hiddenCols]\n        console.log('currenlty hidden ONE', currentlyHidden)\n        currentlyHidden.find(i => i === col) ? currentlyHidden.filter(item => item !== col) : currentlyHidden.push(col)\n        console.log('currenlty hidden TWO', currentlyHidden)\n        setHiddenCols(currentlyHidden)\n    }\n    return (\n        <div className=\"tabular-main\">\n            <TabularHeader\n                columns={hiddenCols}\n                handleSetHiddenCols={handleSetHiddenCols} />\n            <table className='tabular-table' ref={tableElement}>\n                <thead className='tabular-header'>\n                    <tr className='tabular-row-header'>\n                        {headers.map(({ ref, val }, i) => (<th ref={ref} className='tabular-th' width={200}>\n                            <div style={{ display: 'flex', flexDirection: 'row' }}>{val}\n                                <div className='sorting-icons'>\n                                    <FontAwesomeIcon style={{ fontSize: '10px' }} icon=\"fa-solid fa-arrow-up\" onClick={() => handleSetActiveSort(val, 'up')} />\n                                    <FontAwesomeIcon style={{ fontSize: '10px' }} icon=\"fa-solid fa-arrow-down\" onClick={() => handleSetActiveSort(val, 'down')} />\n                                </div>\n                                <div className='hide-col'>\n                                    <FontAwesomeIcon style={{ fontSize: '10px' }} icon=\"fa-solid fa-window-close\" onClick={() => handleSetHiddenCols(val)} />\n                                </div>\n                                <div className={`col-resize resize-handle ${activeIndex === i ? \"active\" : \"idle\"\n                                    }`}\n                                    style={{ height: tableHeight }}\n                                    onMouseDown={() => mouseDown(i)}\n                                // draggable\n                                // onDragStart={(a) => handleResize(a, val)}\n                                // onDragOver={(a) => handleOnDrag(a, val)}\n                                // onDrop={(a) => handleResizeDrop(a, val)}\n                                />\n                            </div>\n                        </th>))}\n                    </tr>\n                </thead>\n                <tbody className='tabular-body'>\n                    {tableData.map(row =>\n                        <tr key={Math.random()}\n                            draggable\n                            className='tabular-row'\n                            onDragStart={(e) => handleOnDrag(e, row)}\n                            onDragOver={(e) => handleOnDragOver(e, row)}\n                            onDrop={(e) => handleOnDrop(e, row)}>\n                            {Object.keys(row).map(d => <td key={Math.random()} className='tabular-cell' style={hiddenCols.includes(d) ? {display: 'none'} : {}}>\n                                {!hiddenCols.includes(d) ? typeof row[d] === 'object' ? Object.keys(row[d]).map(p => row[d][p].name || row[d][p]).join(', ') : row[d].toString() : null}\n                            </td>)}\n                        </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Tabular;\n","import produce from 'immer'\n\nimport { useRef } from 'react';\n\nexport const alphaSort = (items, dir, val) => {\n    if (dir === 'up') {\n    items.sort((a, b) => {\n        const nameA = a[val].toUpperCase(); // ignore upper and lowercase\n        const nameB = b[val].toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n            return -1;\n        }\n        if (nameA > nameB) {\n            return 1;\n        }\n\n        // names must be equal\n        return 0;\n    })\n} else {\n    items.sort((a, b) => {\n        const nameA = a[val].toUpperCase(); // ignore upper and lowercase\n        const nameB = b[val].toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n            return 1;\n        }\n        if (nameA > nameB) {\n            return -1;\n        }\n\n        // names must be equal\n        return 0;\n    })\n}\n}\n\nexport const numSort = (dir, a, b) => {\n    if (dir === 'up') {\n        return a - b;\n    } else {\n        return b - a;\n    }\n}\n\nfunction getPosFromId(id) {\n  return id.split(\",\").map((n) => parseInt(n, 10));\n}\n\nexport function onDragStart(evt) {\n  evt.persist();\n  //store id as key so onDragOver can read it via \"types\"\n  evt.dataTransfer.setData(evt.target.id, \"\");\n}\n\nexport function onDragOver(evt) {\n  evt.persist();\n  const fromPos = getPosFromId(evt.dataTransfer.types[0]);\n  const toPos = getPosFromId(evt.target.closest(\"td\").id);\n  if (\n    (fromPos[0] === toPos[0] && fromPos[1] !== toPos[1]) || //horizontal only\n    (fromPos[1] === toPos[1] && fromPos[0] !== toPos[0]) //vertical only\n  ) {\n    evt.preventDefault(); //allow drop\n  }\n}\n\nexport function onDrop(evt, setGrid) {\n  evt.preventDefault();\n  const fromPos = getPosFromId(evt.dataTransfer.types[0]);\n  const toPos = getPosFromId(evt.target.closest(\"td\").id);\n  if (fromPos[0] === toPos[0] && fromPos[1] !== toPos[1]) {\n    //horizontal drag\n    const dist = Math.abs(toPos[1] - fromPos[1]);\n    const dir = toPos[1] > fromPos[1] ? 1 : -1; //to right or left\n    setGrid(\n      produce((draft) => {\n        const cell = draft[fromPos[0]][fromPos[1]];\n        for (var i = 0; i < dist; i += 1) {\n          draft[fromPos[0]][fromPos[1] + i * dir] =\n            draft[fromPos[0]][fromPos[1] + (i + 1) * dir];\n        }\n        draft[fromPos[0]][fromPos[1] + dist * dir] = cell;\n      })\n    );\n  } else {\n    //vertical drag\n    const dist = Math.abs(toPos[0] - fromPos[0]);\n    const dir = toPos[0] > fromPos[0] ? 1 : -1; //to down or up\n    setGrid(\n      produce((draft) => {\n        const cell = draft[fromPos[0]][fromPos[1]];\n        for (var i = 0; i < dist; i += 1) {\n          draft[fromPos[0] + i * dir][fromPos[1]] =\n            draft[fromPos[0] + (i + 1) * dir][fromPos[1]];\n        }\n        draft[fromPos[0] + dist * dir][fromPos[1]] = cell;\n      })\n    );\n  }\n}\n\nexport function arrayMove(arr, old_index, new_index) {\n    console.log(old_index, new_index)\n    if (new_index >= arr.length) {\n        var k = new_index - arr.length + 1;\n        while (k--) {\n            arr.push(undefined);\n        }\n    }\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n    return arr; // for testing\n};\n\nexport function createHeaders(headers) {\n  return headers.map((item) => ({\n      val: item,\n      ref: useRef()\n  }));\n};","import './App.css';\nimport Tabular from './Tabular';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n<Tabular />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}