{"version":3,"sources":["Tabular/index.js","App.js","index.js"],"names":["fontawesome","library","add","faCheckSquare","faCoffee","faArrowUp","faArrowDown","Tabular","activeSort","setActiveSort","useState","console","log","data","headers","Set","map","i","Object","keys","flat","processedData","length","newD","sort","a","b","_a$activeSort$","toString","localeCompare","_b$activeSort$","handleSetActiveSort","val","direction","index","_jsx","className","children","_jsxs","FontAwesomeIcon","icon","onClick","row","d","p","name","join","Math","random","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"oRAQAA,IAAYC,QAAQC,IAAIC,IAAeC,IAAUC,IAAWC,KAmD7CC,MAjDf,WACI,MAAOC,EAAYC,GAAiBC,mBAAS,MAC7CC,QAAQC,IAAI,UAAWC,GACvB,MAAMC,EAAU,IAAI,IAAIC,IAAIF,EAAKG,KAAIC,GAAKC,OAAOC,KAAKF,KAAIG,SAC1DT,QAAQC,IAAI,UAAWE,GACvB,MAAMO,EAAgBA,KAClB,GAAIb,GAAcA,EAAWc,OAAQ,CACjC,IAAIC,EAAO,GAaX,OAXIA,EADkB,SAAlBf,EAAW,GACJK,EAAKW,MAAK,CAACC,EAAGC,KAAO,IAADC,EACvB,OAAOF,EAAEjB,EAAW,IAAMkB,EAAElB,EAAW,MAAuB,QAApBmB,EAAIF,EAAEjB,EAAW,WAAG,IAAAmB,OAAA,EAAhBA,EAAkBC,WAAWC,cAAcH,EAAElB,EAAW,IAAIoB,YAAW,IAGlHf,EAAKW,MAAK,CAACC,EAAGC,KAAO,IAADI,EAEvB,OADAnB,QAAQC,IAAIa,EAAGjB,EAAW,GAAIkB,EAAElB,EAAW,KACpCkB,EAAElB,EAAW,IAAMiB,EAAEjB,EAAW,MAAuB,QAApBsB,EAAIJ,EAAElB,EAAW,WAAG,IAAAsB,OAAA,EAAhBA,EAAkBF,WAAWC,cAAcJ,EAAEjB,EAAW,IAAIoB,YAAW,IAG7HjB,QAAQC,IAAIW,GAELA,CACX,CACA,OAAOV,CAAI,EAETkB,EAAsBA,CAACC,EAAKC,IAAcxB,EAAc,CAACuB,EAAKC,IAEpE,OADAtB,QAAQC,IAAI,qBAAsBJ,EAAYa,IAAgB,GAAGa,MAAOb,IAAgB,GAAGa,OAEvFC,cAAA,OAAKC,UAAU,eAAcC,SACzBC,eAAA,SAAOF,UAAU,gBAAeC,SAAA,CAC5BF,cAAA,SAAOC,UAAU,iBAAgBC,SAC7BF,cAAA,MAAIC,UAAU,cAAaC,SACtBvB,EAAQE,KAAIgB,GAAQM,eAAA,MAAAD,SAAA,CAAKL,EACtBG,cAACI,IAAe,CAACC,KAAK,uBAAuBC,QAASA,IAAMV,EAAoBC,EAAK,QACrFG,cAACI,IAAe,CAACC,KAAK,yBAAyBC,QAASA,IAAMV,EAAoBC,EAAK,mBAInGG,cAAA,SAAOC,UAAU,eAAcC,SAC1BhB,IAAgBL,KAAI0B,GAAOP,cAAA,MAAwBC,UAAU,cAAaC,SACtEnB,OAAOC,KAAKuB,GAAK1B,KAAI2B,GAAKR,cAAA,MAAwBC,UAAU,eAAcC,SACpD,kBAAXK,EAAIC,GAAkBzB,OAAOC,KAAKuB,EAAIC,IAAI3B,KAAI4B,GAAKF,EAAIC,GAAGC,GAAGC,MAAQH,EAAIC,GAAGC,KAAIE,KAAK,MAAQJ,EAAIC,GAAGf,YAD5EmB,KAAKC,aADRD,KAAKC,kBAS9D,EC9CeC,MARf,WACE,OACEd,cAAA,OAAKC,UAAU,MAAKC,SACxBF,cAAC5B,EAAO,KAGR,ECJA2C,IAASC,OACPhB,cAACiB,IAAMC,WAAU,CAAAhB,SACfF,cAACc,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.77159134.chunk.js","sourcesContent":["import './tabular.css';\nimport data from './fake-data.json'\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport fontawesome from '@fortawesome/fontawesome'\nimport { faCheckSquare, faCoffee, faArrowUp, faArrowDown } from '@fortawesome/fontawesome-free-solid'\n// import { alphaSort, numSort } from './utils';\n\nfontawesome.library.add(faCheckSquare, faCoffee, faArrowUp, faArrowDown);\n\nfunction Tabular() {\n    const [activeSort, setActiveSort] = useState(null)\n    console.log('data...', data)\n    const headers = [...new Set(data.map(i => Object.keys(i)).flat())]\n    console.log('headers', headers)\n    const processedData = () => {\n        if (activeSort && activeSort.length) {\n            let newD = []\n            if (activeSort[1] === 'down') {\n                newD = data.sort((a, b) => {\n                    return a[activeSort[0]] - b[activeSort[0]] || a[activeSort[0]]?.toString().localeCompare(b[activeSort[0]].toString())\n                });\n            } else {\n                newD = data.sort((a, b) => {\n                    console.log(a, activeSort[0], b[activeSort[0]])\n                    return b[activeSort[0]] - a[activeSort[0]] || b[activeSort[0]]?.toString().localeCompare(a[activeSort[0]].toString())\n                });\n            }\n            console.log(newD)\n            // console.log(numSort(activeSort[1], data[activeSort[0]], data))\n            return newD\n        }\n        return data\n    }\n    const handleSetActiveSort = (val, direction) => setActiveSort([val, direction])\n    console.log('active  sort is...', activeSort, processedData()[0].index, processedData()[1].index)\n    return (\n        <div className=\"tabular-main\">\n            <table className='tabular-table'>\n                <thead className='tabular-header'>\n                    <tr className='tabular-row'>\n                        {headers.map(val => (<th>{val}\n                            <FontAwesomeIcon icon=\"fa-solid fa-arrow-up\" onClick={() => handleSetActiveSort(val, 'up')} />\n                            <FontAwesomeIcon icon=\"fa-solid fa-arrow-down\" onClick={() => handleSetActiveSort(val, 'down')} />\n                        </th>))}\n                    </tr>\n                </thead>\n                <tbody className='tabular-body'>\n                    {processedData().map(row => <tr key={Math.random()} className='tabular-row'>\n                        {Object.keys(row).map(d => <td key={Math.random()} className='tabular-cell'>\n                            {typeof row[d] === 'object' ? Object.keys(row[d]).map(p => row[d][p].name || row[d][p]).join(', ') : row[d].toString()}\n                        </td>)}\n                    </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Tabular;\n","import './App.css';\nimport Tabular from './Tabular';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n<Tabular />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}